// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	article "github.com/sangianpatrick/devoria-article-service/domain/article"

	mock "github.com/stretchr/testify/mock"

	response "github.com/sangianpatrick/devoria-article-service/response"
)

// ArticleUsecase is an autogenerated mock type for the ArticleUsecase type
type ArticleUsecase struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, params
func (_m *ArticleUsecase) Create(ctx context.Context, params article.CreateArticleRequest) response.Response {
	ret := _m.Called(ctx, params)

	var r0 response.Response
	if rf, ok := ret.Get(0).(func(context.Context, article.CreateArticleRequest) response.Response); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(response.Response)
		}
	}

	return r0
}

// Edit provides a mock function with given fields: ctx, params
func (_m *ArticleUsecase) Edit(ctx context.Context, params article.EditArticleRequest) response.Response {
	ret := _m.Called(ctx, params)

	var r0 response.Response
	if rf, ok := ret.Get(0).(func(context.Context, article.EditArticleRequest) response.Response); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(response.Response)
		}
	}

	return r0
}

// EditStatus provides a mock function with given fields: ctx, params
func (_m *ArticleUsecase) EditStatus(ctx context.Context, params article.EditStatusArticleRequest) response.Response {
	ret := _m.Called(ctx, params)

	var r0 response.Response
	if rf, ok := ret.Get(0).(func(context.Context, article.EditStatusArticleRequest) response.Response); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(response.Response)
		}
	}

	return r0
}

// GetAllPrivate provides a mock function with given fields: ctx
func (_m *ArticleUsecase) GetAllPrivate(ctx context.Context) response.Response {
	ret := _m.Called(ctx)

	var r0 response.Response
	if rf, ok := ret.Get(0).(func(context.Context) response.Response); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(response.Response)
		}
	}

	return r0
}

// GetAllPublic provides a mock function with given fields: ctx
func (_m *ArticleUsecase) GetAllPublic(ctx context.Context) response.Response {
	ret := _m.Called(ctx)

	var r0 response.Response
	if rf, ok := ret.Get(0).(func(context.Context) response.Response); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(response.Response)
		}
	}

	return r0
}

// GetOne provides a mock function with given fields: ctx, params
func (_m *ArticleUsecase) GetOne(ctx context.Context, params article.GetOneArticleRequest) response.Response {
	ret := _m.Called(ctx, params)

	var r0 response.Response
	if rf, ok := ret.Get(0).(func(context.Context, article.GetOneArticleRequest) response.Response); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(response.Response)
		}
	}

	return r0
}
